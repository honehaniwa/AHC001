{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1","program":"/home/tt/.rustup/toolchains/1.42.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rand_pcg","--edition=2018","/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4520a81aabb94bb9","-C","extra-filename=-4520a81aabb94bb9","--out-dir","/home/tt/workspace/AHC/001/AHC001/target/rls/debug/deps","-L","dependency=/home/tt/workspace/AHC/001/AHC001/target/rls/debug/deps","--extern","rand_core=/home/tt/workspace/AHC/001/AHC001/target/rls/debug/deps/librand_core-49ff8fc710ad1a04.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/tt/.rustup/toolchains/1.42.0-x86_64-unknown-linux-gnu"],"output":"/home/tt/workspace/AHC/001/AHC001/target/rls/debug/deps/librand_pcg-4520a81aabb94bb9.rmeta"},"prelude":{"crate_id":{"name":"rand_pcg","disambiguator":[6220995778009942870,5567990987197462100]},"crate_root":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src","external_crates":[{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4475606148663180750,5419346832002689975]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[18209801913766412741,14708739502762596590]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[17534900064032465835,11074003829314630197]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":4,"id":{"name":"rand_core","disambiguator":[8984103245239679918,15072659399780987338]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":5,"id":{"name":"std","disambiguator":[7620319826054890005,5717302534568989792]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":6,"id":{"name":"alloc","disambiguator":[5259792513756561775,1479263106690228407]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":7,"id":{"name":"libc","disambiguator":[14346116818397650781,2977216825120829807]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":8,"id":{"name":"unwind","disambiguator":[3936655635976934790,16389253933182331078]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":9,"id":{"name":"cfg_if","disambiguator":[5174545163365617014,15822577537272331306]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":10,"id":{"name":"backtrace","disambiguator":[1537777832242498626,9514621648460519184]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[18358940337312830879,10081988574518201852]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[12121062121650459058,11489301800313262789]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":13,"id":{"name":"hashbrown","disambiguator":[14319052529584542008,1066639489166686923]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9012578297089494616,4116522626272880912]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[8611561841149342373,8229239553347846203]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":16,"id":{"name":"getrandom","disambiguator":[16463205764431162583,3182383657564117096]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":17,"id":{"name":"cfg_if","disambiguator":[13843369884584090390,16668332626400145972]}},{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","num":18,"id":{"name":"libc","disambiguator":[15364416019749898864,8356619949950912785]}}],"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":356,"byte_end":2001,"line_start":9,"line_end":49,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1858,"byte_end":1863,"line_start":45,"line_end":45,"column_start":23,"column_end":28},"alias_span":null,"name":"Pcg32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":88},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1865,"byte_end":1875,"line_start":45,"line_end":45,"column_start":30,"column_end":40},"alias_span":null,"name":"Lcg64Xsh32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1948,"byte_end":1953,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"alias_span":null,"name":"Pcg64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":93},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1955,"byte_end":1966,"line_start":47,"line_end":47,"column_start":16,"column_end":27},"alias_span":null,"name":"Lcg128Xsl64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1976,"byte_end":1984,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"alias_span":null,"name":"Pcg64Mcg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":98},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1986,"byte_end":1997,"line_start":48,"line_end":48,"column_start":19,"column_end":30},"alias_span":null,"name":"Mcg128Xsl64","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":356,"byte_end":2001,"line_start":9,"line_end":49,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":33},{"krate":0,"index":80},{"krate":0,"index":83}],"decl_id":null,"docs":" The PCG random number generators.","sig":null,"attributes":[{"value":"! The PCG random number generators.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":356,"byte_end":393,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":394,"byte_end":397,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This is a native Rust implementation of a small selection of PCG generators.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":398,"byte_end":478,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! The primary goal of this crate is simple, minimal, well-tested code; in","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":479,"byte_end":554,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"! other words it is explicitly not a goal to re-implement all of PCG.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":555,"byte_end":626,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":627,"byte_end":630,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! This crate provides:","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":631,"byte_end":655,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":656,"byte_end":659,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! -   `Pcg32` aka `Lcg64Xsh32`, officially known as `pcg32`, a general","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":660,"byte_end":732,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"!     purpose RNG. This is a good choice on both 32-bit and 64-bit CPUs","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":733,"byte_end":806,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"!     (for 32-bit output).","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":807,"byte_end":835,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! -   `Pcg64` aka `Lcg128Xsl64`, officially known as `pcg64`, a general","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":836,"byte_end":909,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"!     purpose RNG. This is a good choice on 64-bit CPUs.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":910,"byte_end":968,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"! -   `Pcg64Mcg` aka `Mcg128Xsl64`, officially known as `pcg64_fast`,","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":969,"byte_end":1040,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"!     a general purpose RNG using 128-bit multiplications. This has poor","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1041,"byte_end":1115,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"!     performance on 32-bit CPUs but is a good choice on 64-bit CPUs for","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1116,"byte_end":1190,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"!     both 32-bit and 64-bit output.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1191,"byte_end":1229,"line_start":25,"line_end":25,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1230,"byte_end":1233,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Both of these use 16 bytes of state and 128-bit seeds, and are considered","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1234,"byte_end":1311,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"! value-stable (i.e. any change affecting the output given a fixed seed would","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1312,"byte_end":1391,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"! be considered a breaking change to the crate).","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1392,"byte_end":1442,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"deny(missing_docs)","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1659,"byte_end":1681,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1682,"byte_end":1721,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1723,"byte_end":1760,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"no_std","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/lib.rs","byte_start":1762,"byte_end":1772,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":88},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3418,"byte_end":3428,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Lcg64Xsh32","qualname":"::pcg64::Lcg64Xsh32","value":"Lcg64Xsh32 {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" A PCG random number generator (XSH RR 64/32 (LCG) variant).","sig":null,"attributes":[{"value":"/ A PCG random number generator (XSH RR 64/32 (LCG) variant).","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2737,"byte_end":2800,"line_start":20,"line_end":20,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2801,"byte_end":2804,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Permuted Congruential Generator with 64-bit state, internal Linear","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2805,"byte_end":2875,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ Congruential Generator, and 32-bit output via \"xorshift high (bits),","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2876,"byte_end":2948,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ random rotation\" output function.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2949,"byte_end":2986,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2987,"byte_end":2990,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a 64-bit LCG with explicitly chosen stream with the PCG-XSH-RR","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":2991,"byte_end":3065,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ output function. This combination is the standard `pcg32`.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3066,"byte_end":3128,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3129,"byte_end":3132,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Despite the name, this implementation uses 16 bytes (128 bit) space","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3133,"byte_end":3204,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ comprising 64 bits of state and 64 bits stream selector. These are both set","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3205,"byte_end":3284,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ by `SeedableRng`, using a 128-bit seed.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3285,"byte_end":3328,"line_start":31,"line_end":31,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":13},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3533,"byte_end":3538,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Pcg32","qualname":"::pcg64::Pcg32","value":"Lcg64Xsh32","parent":null,"children":[],"decl_id":null,"docs":" `Lcg64Xsh32` is also officially known as `pcg32`.\n","sig":null,"attributes":[{"value":"/ `Lcg64Xsh32` is also officially known as `pcg32`.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3470,"byte_end":3523,"line_start":39,"line_end":39,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3863,"byte_end":3866,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Lcg64Xsh32>::new","value":"fn (state: u64, stream: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an instance compatible with PCG seed and stream.","sig":null,"attributes":[{"value":"/ Construct an instance compatible with PCG seed and stream.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3576,"byte_end":3638,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3643,"byte_end":3646,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that PCG specifies default values for both parameters:","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3651,"byte_end":3714,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3719,"byte_end":3722,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ - `state = 0xcafef00dd15ea5e5`","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3727,"byte_end":3761,"line_start":47,"line_end":47,"column_start":5,"column_end":39}},{"value":"/ - `stream = 0xa02bdbf7bb3c0a7`","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3766,"byte_end":3800,"line_start":48,"line_end":48,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7570,"byte_end":7581,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"Lcg128Xsl64","qualname":"::pcg128::Lcg128Xsl64","value":"Lcg128Xsl64 {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" A PCG random number generator (XSL RR 128/64 (LCG) variant).","sig":null,"attributes":[{"value":"/ A PCG random number generator (XSL RR 128/64 (LCG) variant).","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":6885,"byte_end":6949,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":6950,"byte_end":6953,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Permuted Congruential Generator with 128-bit state, internal Linear","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":6954,"byte_end":7025,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ Congruential Generator, and 64-bit output via \"xorshift low (bits),","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7026,"byte_end":7097,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ random rotation\" output function.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7098,"byte_end":7135,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7136,"byte_end":7139,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a 128-bit LCG with explicitly chosen stream with the PCG-XSL-RR","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7140,"byte_end":7215,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ output function. This combination is the standard `pcg64`.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7216,"byte_end":7278,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7279,"byte_end":7282,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Despite the name, this implementation uses 32 bytes (256 bit) space","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7283,"byte_end":7354,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ comprising 128 bits of state and 128 bits stream selector. These are both","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7355,"byte_end":7432,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ set by `SeedableRng`, using a 256-bit seed.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7433,"byte_end":7480,"line_start":31,"line_end":31,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7689,"byte_end":7694,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Pcg64","qualname":"::pcg128::Pcg64","value":"Lcg128Xsl64","parent":null,"children":[],"decl_id":null,"docs":" `Lcg128Xsl64` is also officially known as `pcg64`.\n","sig":null,"attributes":[{"value":"/ `Lcg128Xsl64` is also officially known as `pcg64`.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7625,"byte_end":7679,"line_start":39,"line_end":39,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7986,"byte_end":7989,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Lcg128Xsl64>::new","value":"fn (state: u128, stream: u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an instance compatible with PCG seed and stream.","sig":null,"attributes":[{"value":"/ Construct an instance compatible with PCG seed and stream.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7734,"byte_end":7796,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7801,"byte_end":7804,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that PCG specifies default values for both parameters:","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7809,"byte_end":7872,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7877,"byte_end":7880,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ - `state = 0xcafef00dd15ea5e5`","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7885,"byte_end":7919,"line_start":47,"line_end":47,"column_start":5,"column_end":39}},{"value":"/ - `stream = 0xa02bdbf7bb3c0a7ac28fa16a64abf96`","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7924,"byte_end":7974,"line_start":48,"line_end":48,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10620,"byte_end":10631,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"Mcg128Xsl64","qualname":"::pcg128::Mcg128Xsl64","value":"Mcg128Xsl64 {  }","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" A PCG random number generator (XSL 128/64 (MCG) variant).","sig":null,"attributes":[{"value":"/ A PCG random number generator (XSL 128/64 (MCG) variant).","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":9978,"byte_end":10039,"line_start":121,"line_end":121,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10040,"byte_end":10043,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Permuted Congruential Generator with 128-bit state, internal Multiplicative","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10044,"byte_end":10123,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/ Congruential Generator, and 64-bit output via \"xorshift low (bits),","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10124,"byte_end":10195,"line_start":124,"line_end":124,"column_start":1,"column_end":72}},{"value":"/ random rotation\" output function.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10196,"byte_end":10233,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10234,"byte_end":10237,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This is a 128-bit MCG with the PCG-XSL-RR output function, also known as","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10238,"byte_end":10314,"line_start":127,"line_end":127,"column_start":1,"column_end":77}},{"value":"/ `pcg64_fast`.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10315,"byte_end":10332,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"/ Note that compared to the standard `pcg64` (128-bit LCG with PCG-XSL-RR","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10333,"byte_end":10408,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/ output function), this RNG is faster, also has a long cycle, and still has","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10409,"byte_end":10487,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"/ good performance on statistical tests.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10488,"byte_end":10530,"line_start":131,"line_end":131,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10731,"byte_end":10739,"line_start":139,"line_end":139,"column_start":10,"column_end":18},"name":"Pcg64Mcg","qualname":"::pcg128::Pcg64Mcg","value":"Mcg128Xsl64","parent":null,"children":[],"decl_id":null,"docs":" A friendly name for `Mcg128Xsl64` (also known as `pcg64_fast`).\n","sig":null,"attributes":[{"value":"/ A friendly name for `Mcg128Xsl64` (also known as `pcg64_fast`).","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10654,"byte_end":10721,"line_start":138,"line_end":138,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10964,"byte_end":10967,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<Mcg128Xsl64>::new","value":"fn (state: u128) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an instance compatible with PCG seed.","sig":null,"attributes":[{"value":"/ Construct an instance compatible with PCG seed.","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10779,"byte_end":10830,"line_start":142,"line_end":142,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10835,"byte_end":10838,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note that PCG specifies a default value for the parameter:","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10843,"byte_end":10905,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10910,"byte_end":10913,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ - `state = 0xcafef00dd15ea5e5`","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10918,"byte_end":10952,"line_start":146,"line_end":146,"column_start":5,"column_end":39}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3559,"byte_end":3569,"line_start":42,"line_end":42,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":4636,"byte_end":4646,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":4910,"byte_end":4920,"line_start":83,"line_end":83,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":5239,"byte_end":5249,"line_start":95,"line_end":95,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7716,"byte_end":7727,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":8765,"byte_end":8776,"line_start":74,"line_end":74,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":9041,"byte_end":9052,"line_start":82,"line_end":82,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":9516,"byte_end":9527,"line_start":96,"line_end":96,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10761,"byte_end":10772,"line_start":141,"line_end":141,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":11211,"byte_end":11222,"line_start":154,"line_end":154,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":11491,"byte_end":11502,"line_start":162,"line_end":162,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":11870,"byte_end":11881,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":3559,"byte_end":3569,"line_start":42,"line_end":42,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":4636,"byte_end":4646,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":88},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":4910,"byte_end":4920,"line_start":83,"line_end":83,"column_start":22,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":88},"to":{"krate":4,"index":147}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg64.rs","byte_start":5239,"byte_end":5249,"line_start":95,"line_end":95,"column_start":18,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":88},"to":{"krate":4,"index":141}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":7716,"byte_end":7727,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":8765,"byte_end":8776,"line_start":74,"line_end":74,"column_start":21,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":93},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":9041,"byte_end":9052,"line_start":82,"line_end":82,"column_start":22,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":147}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":9516,"byte_end":9527,"line_start":96,"line_end":96,"column_start":18,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":93},"to":{"krate":4,"index":141}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":10761,"byte_end":10772,"line_start":141,"line_end":141,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":11211,"byte_end":11222,"line_start":154,"line_end":154,"column_start":21,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":98},"to":{"krate":1,"index":5916}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":11491,"byte_end":11502,"line_start":162,"line_end":162,"column_start":22,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":98},"to":{"krate":4,"index":147}},{"span":{"file_name":"/home/tt/.cargo/registry/src/github.com-1ecc6299db9ec823/rand_pcg-0.2.1/src/pcg128.rs","byte_start":11870,"byte_end":11881,"line_start":175,"line_end":175,"column_start":18,"column_end":29},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":98},"to":{"krate":4,"index":141}}]}